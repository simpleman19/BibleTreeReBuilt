@model BibleTree.Models.BadgeInstance
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "SendBadge";
}

<script src="~/Scripts/badge.selection.js"></script>
<script src="~/browser_components/datatables/js/jquery.dataTables.js"></script>
<link rel="stylesheet" href="~/browser_components/datatables/css/dataTables.bootstrap.css">
<script src="~/Scripts/student.selection.js"></script>

<script>

	var buttID;

	function saveButtonID(clicked_id){
		//saving the id of pressed button.
		buttID = clicked_id;
		selectStudent();
		}
        function finishedBadgeSelection() {
            // Do something after badge is selected
			$('#badge_button').val(badge_selection);
        }

    function finishedStudentSelection() {
        // Do something after user is selected
		if (buttID == "sender_button"){
		$('#sender_button').val(student_selection);
		}
		else 
			{$('#receipient_button').val(student_selection);}
    }

</script>

<div id="modal">

</div>



<h2>SendBadge</h2>



@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "sendform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.award_sentid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               	 @(User.Identity.GetUserName().IndexOf("@") > 0 ? User.Identity.GetUserName().Substring(0, User.Identity.GetUserName().IndexOf("@")) : User.Identity.GetUserName())
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.recipient_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
			   <input type="button" class="col-sm-3" id="receipient_button" value="Select Student" onclick="saveButtonID(this.id)"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.badge_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <input type="button" class="col-sm-3" id="badge_button" value="Select Badge" onclick="selectBadge()"/>
            </div>
        </div>

		<div class="form-group">
            @Html.LabelFor(model => model.award_comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
				@Html.TextArea("Description", null,htmlAttributes: new { @class = "form-control col-md-2" })  
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Send" class="btn btn-default" onclick="awardBadge()"/>
            </div>
        </div>
    </div>
}

<script>
            @functions{
                public string TokenHeaderValue()
                {
                    string cookieToken, formToken;
                    AntiForgery.GetTokens(null, out cookieToken, out formToken);
                    return cookieToken + ":" + formToken;                
                }
            }
    function awardBadge() {
        form = "#sendform";
        action = $(form).attr("action");
        token = $('input[name="__RequestVerificationToken"]').val();
        var formData = {'__RequestVerificationToken': token, badge_id: 1, award_sentid: 2, user_id: 3, award_comment: "Testing"};

        $.ajax({
            type: "POST",
            dataType: "html",
            url: action,
            data: formData,
            success: function (data) {
 
            }
        });
    }
</script>